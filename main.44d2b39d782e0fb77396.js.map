{"version":3,"sources":["webpack:///./data.js","webpack:///./index.js"],"names":["colors","refs","startBtn","document","querySelector","stopBtn","bodyHtml","changer","min","max","Math","floor","random","this","intervalId","start","disabled","setInterval","length","style","backgroundColor","randomIntegerFromInterval","stop","clearInterval","addEventListener"],"mappings":"kGAEA,IAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAO,CACXC,SAAUC,SAASC,cAAc,yBACjCC,QAASF,SAASC,cAAc,wBAChCE,SAAUH,SAASC,cAAc,S,ICqB7BG,EAAU,I,WA3Bd,cAA8B,I,MAAhBP,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,K,EAQM,SAACO,EAAKC,GAClC,OAAOT,EAAOU,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,M,EAT7B,+B,EAAA,M,sFAC5BK,KAAKZ,KAAOA,EACZY,KAAKb,OAASA,EACda,KAAKC,WAAa,K,2BASpBC,MAAA,WAAQ,WACNd,EAAKC,SAASc,UAAW,EACzBH,KAAKC,WAAaG,aAAY,WAC5B,IACMR,EAAMT,EAAOkB,OAAS,EAC5BjB,EAAKK,SAASa,MAAMC,gBAAkB,EAAKC,0BAF/B,EAE8DZ,KACzE,M,EAGLa,KAAA,WACEC,cAAcV,KAAKC,YACnBb,EAAKC,SAASc,UAAW,G,KAIb,CAAY,IAG5Bf,EAAKC,SAASsB,iBAAiB,SAAS,kBAAMjB,EAAQQ,WACtDd,EAAKI,QAAQmB,iBAAiB,SAAS,kBAAMjB,EAAQe,Y","file":"main.44d2b39d782e0fb77396.js","sourcesContent":["export {colors, refs}\r\n\r\nconst colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];\r\n\r\nconst refs = {\r\n  startBtn: document.querySelector('[data-action=\"start\"]'),\r\n  stopBtn: document.querySelector('[data-action=\"stop\"]'),\r\n  bodyHtml: document.querySelector('body'),\r\n}","// import './styles.css';\r\n\r\nimport {colors, refs} from './data.js';\r\n\r\n\r\n// // Работа кнопок Start, Stop\r\n\r\nclass Changer {\r\n  constructor({ colors, refs }) {\r\n    this.refs = refs;\r\n    this.colors = colors;\r\n    this.intervalId = null;\r\n  }\r\n\r\n  // Рандомный выбор цвета\r\n\r\n  randomIntegerFromInterval = (min, max) => {\r\n  return colors[Math.floor(Math.random() * (max - min + 1) + min)];\r\n};\r\n\r\n  start() {\r\n    refs.startBtn.disabled = true;\r\n    this.intervalId = setInterval(() => {\r\n      const min = 0;\r\n      const max = colors.length - 1;\r\n      refs.bodyHtml.style.backgroundColor = this.randomIntegerFromInterval(min, max)\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n    refs.startBtn.disabled = false;\r\n  }\r\n};\r\n\r\nconst changer = new Changer({\r\n})\r\n\r\nrefs.startBtn.addEventListener('click', () => changer.start());\r\nrefs.stopBtn.addEventListener('click', () => changer.stop());"],"sourceRoot":""}